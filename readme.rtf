{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 Architecure
\b0 \
\
Project is based on RobotLegs 1.5 with LazyMediator extension. Extension creates and removes mediators automatically when view instance is added to / removed from stage. The architecture used combines MVC and entity-component framework. All the UI is handled by MVC while game logic is \
handled in GameController class. Both parts benefit from the same dependency injector. \
\

\b Collisions
\b0 \
\
Collision system has 2 steps - first x and y distance between 2 objects is checked and when it\'92s less than threshold value intersection between object\'92s bounding boxes is tested. I could improve this by checking speed of objects and determining whether more tests should be executed while interpolating between current and next frame object positions (for example in case when bullet speed is created than it\'92s bounding box with or height) \
\

\b Pooling
\b0 \
\
Enemies and bullets are created from pools instead of creating new instance every time they\'92re needed. \
\

\b Saving score and security 
\b0 \
\
Vulnerable fields like score and number of lives are obfuscated against memory hacking using ProtectedInt class. I\'92d save score by encrypting json string with algorithm like SHA-1 using dynamically generated key from movieclip transformations. This makes sure that key would always be the same and it can\'92t be obtain by decompiling swf file. \
}